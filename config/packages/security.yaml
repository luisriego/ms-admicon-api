security:
    encoders:
        App\Entity\User:
            algorithm: auto

#    providers:
#        user_provider:
#            id: App\Security\Core\User\UserProvider
#
#    firewalls:
#        register:
#            pattern: ^/api/v1/users/register
#            methods: [POST]
#            security: false
#        resend_activation_email:
#            pattern: ^/api/v1/users/resend_activation_email
#            methods: [POST]
#            security: false
#        docs:
#            pattern: ^/api/v1/docs
#            methods: [GET]
#            security: false
#        request_reset_password:
#            pattern: ^/api/v1/users/request_reset_password
#            methods: [POST]
#            security: false
#        reset_password:
#            pattern: ^/api/v1/users/reset_password
#            methods: [POST]
#            security: false
#        accept_request:
#            pattern: ^/api/v1/groups/.*/accept_request
#            methods: [PUT]
#            security: false
#        login:
#            pattern: /api/v1/users/login
#            stateless: true
#            anonymous: true
#            provider: user_provider
#            json_login:
#                check_path: /api/v1/users/login_check
#                success_handler: lexik_jwt_authentication.handler.authentication_success
#                failure_handler: lexik_jwt_authentication.handler.authentication_failure
#                require_previous_session: false
#        facebook_auth:
#            pattern: ^/api/v1/users/facebook/auth
#            methods: [POST]
#            security: false
#        api:
#            pattern: ^/api/v1
#            stateless: true
#            guard:
#                authenticators:
#                    - lexik_jwt_authentication.jwt_token_authenticator
#
#    access_control:
#        - { path: ^/api/v1, roles: IS_AUTHENTICATED_FULLY }

    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#c-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        users_in_memory: { memory: null }
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: users_in_memory

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
